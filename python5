# from django_micro import configure, route, run
# from django.http import HttpResponse
# #from parts import table
# import csv
#
# setting = {
#     "DEBUG" : True,
#     "LANGUAGE_COOE" : "en-us"
# }
#
# configure(setting)
#
# f = open('./source.csv','r')
# table = csv.reader(f)
# data = ''
# for row in table:
#     data = f'''
#     <tr style="border-top:lpt solid #555555">
#         <td><h3>{ row[0] }</h3></td>
#         <td><h3>{ row[1] }</h3></td>
#         <td><h3>{ row[2] }</h3></td>
#      </tr>'''
# # print(table)
#
# # l = [
# #     [1,2,3]
# #     []
# #
# # ]
#
# @route('',name='home')
# def homepage(request):
#     html = f'''
#     <div style="background-color:#0A0A0E;height:100%">
#         <image src="https://file-rctyjgetlr.now.sh" style="height:70%;margin:auto;display:block">
#         <table style="width:60%；color:white;border-collapse:collapse" align="center">
#             {table}
#         </table>
#     </div>'''
#
#     return HttpResponse(html)
#
# application = run()
#
# print(setting['DEBUG'])

# Person = '''
#     1.先定大方向
#     数据从哪来到哪去
#
#     2.再观察
#     方向两端的数据结构
#
#     3.充分理解
#     数据结构的关联性
# '''


# #列表的索引
# #[start:stop:step]，
# # [start:stop:step] start起始索引，stop结束索引，step步长
# # 其中start表示起始索引，stop表示结束索引（不包含该索引对应的元素），step表示步长。在这段代码中
# a = ['q','w','e','r','t','y','u','i','o']
# print(a[0])
# print(a[-1])
# print(a[-9])
#
# print(a[-1:-3])  #起始大于结束，返回为[]
# print(a[-3:-1])
#
# print(a[1:9999])
# print(a[0:8])
#
# print(a[0:8:1])
# print(a[0:8:2])
#
# #列表修改
# a[0] = 1
# print(a[0:10:1])
#
# b = a
# print(b[0:10:1])
#
# #列表修改一个，指向的是同一个区域，修改一个都被修改了
# b[0] = 'q'
# print(b)
# print(a)
#
# z = a[:]
# print(z)
#
# #全部修改，那么就是新建一个空间修改
# a.clear()
# print(a)
# print(z)
#
# x = range(12)  #此函数方便遍历大数字
# print(x)
# y = list(range(0,12))  #生成一个列表
# print(y)
#
# # m = range(999)
# # print(list(range(0,999)))
#
#
# import string
# string.ascii_letters
#
# print([i for i in string.ascii_letters]) #ASCII 字母（大写和小写）的字符串，即 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
# s = string.ascii_letters
# print('z' in s)
# print('Z' in s)
#
#
# # first,last = s
# # print(first)
# # print(last)
#
# # 列表的切割
# first,*others,last = s
# print(first)  #a
# print(last)  #z
#
# print(others)
# print(*others)
#
#
# first,*others,before_last = s
# print(first)
# print(*others)
# print(before_last)


#   字典

d = {
    "key1": 1,
    "key2": 2,
    "key3": 3,
    "key4": 4,
    "key5": 5,
    "key6": 6,
    "key7": 7,
    "key8": 8,
    "key9": 9,
    "key10": 10
}


import string
d = {}.fromkeys([i for i in string.ascii_letters],'hi')  #{}.fromkeys创造新字典
print(d)

d.update({"a":12})  #更新，对字典的值进行添加或者修改
print(d)

k,v = d.popitem()  #逐个处理字典中的元素,或随机删除并返回一个键值对作为元组
print(k)
print(v)
print(k,v)

print(d)
